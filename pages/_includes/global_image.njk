{# add height to the image something like intrinsicheight #}
{% macro global_image(image, classes, carousel=false, lazy = true, imgClass="")%}
    {% set srcset = 'data-srcset' if carousel else 'srcset' %}
    {% if not image.background %}
        <picture>
            {% for size in image.sizes %}
                {% set defaultSrc = { intrinsicwidth : (size.intrinsicwidth if size.intrinsicwidth else image.intrinsicwidth),
                    src: (size.src if size.src else image.src)} %}
                {% for type in image.types %}
                    <source {%if carousel %} data-src="{{ defaultSrc.src }}.{{type}}" {% endif %} srcset="{{ defaultSrc | imgObjSrcSet(type) }}" media="{{size.media}}" sizes="{{size.view}}" type="image/{{type}}">
                {% endfor %}
            {% endfor %}
            <img 
                data-src="{{image.src}}.{{image.types | last}}" 
                {{srcset}}="{{ image | imgObjSrcSet }}"
                sizes = {{(image.sizes | first).view}}
                {%if not carousel %}
                    loading="{{ 'lazy' if lazy else 'auto' }}"
                {% endif %}
                class="{{ 'swiper-lazy w-full h-auto' if carousel }} {{imgClass}}"
                decoding="async"
                alt="{{ image.alt }}">
        </picture>
    {% else %}
        <div class="{{classes}} bg-cover bg-center large:bg-inherit w-full" style="background-image:url({{image.src}}.{{image.types | last}})">{{image.alt}}</div>
    {% endif %}

    {# <script>
        if ('loading' in HTMLImageElement.prototype) {
            const images = document.querySelectorAll('img[loading="lazy"]');
            images.forEach(img => {
                img.src = img.dataset.src;
            });
        } else {
            // Dynamically import the LazySizes library
            const script = document.createElement('script');
            script.src =
            'https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.1.2/lazysizes.min.js';
            document.body.appendChild(script);
        }
    </script> #}
{% endmacro %}